version: "3"

services:
  backend:
    build: ./backend
    user: "${UID}:${GID}"
    network_mode: "host"
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/home/docker/app
    tty: true
    depends_on:
      - celery
      - kafka

  frontend:
    build: ./frontend
    user: "${UID}:${GID}"
    network_mode: "host"
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/home/docker/app

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    network_mode: "host"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    tty: true
    depends_on:
      - backend
      - frontend

  redis:
    build: ./redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis/persistent_storage:/data
    networks:
      ledger-board-network:
        ipv4_address: ${LEDGER_BOARD_REDIS}

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile.celery
    user: "${UID}:${GID}"
    network_mode: "host"
    volumes:
      - ./backend:/home/docker/app
    tty: true
    depends_on:
      - redis
      - kafka

  zoo:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
    networks:
      ledger-board-network:
        ipv4_address: ${LEDGER_BOARD_ZOOKEEPER}

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo
    networks:
      ledger-board-network:
        ipv4_address: ${LEDGER_BOARD_KAFKA}


networks:
 ledger-board-network:
   ipam:
     driver: default
     config:
       - subnet: ${SUBNET_IP}
